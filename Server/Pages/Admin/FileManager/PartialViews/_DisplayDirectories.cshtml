@model Server.Pages.Admin.FileManager.IndexModel
@inject Infrastructure.Settings.ApplicationSettings applicationSettings

@if (Model == null || applicationSettings == null)
{
	return;
}

@{
	var selectItemEnabled = false;

	if (applicationSettings.FileManagerSettings.DeleteItemsEnabled)
	{
		selectItemEnabled = true;
	}
}

<div class="row">
	<div class="col table-responsive">
		<table class="@(applicationSettings.FileManagerSettings.TableStyle)">
			<caption>Directories</caption>

			<thead class="@(applicationSettings.FileManagerSettings.TableHeaderStyle)">
				<tr>
					<th scope="col">
						#
					</th>
					<th scope="col"></th>
					<th scope="col">
						Name
					</th>
					<th scope="col">
						Contents
					</th>
					<th scope="col">
						Attributes
					</th>
					<th scope="col">
						Creation Time
					</th>
					<th scope="col">
						Last Write Time
					</th>
					<th scope="col">
						Last Access Time
					</th>
				</tr>
			</thead>

			<tbody>
				@if (Model.CurrentPath != "/")
				{
					var parentDirectoryPath = Model.CurrentPath ?? "/";
					parentDirectoryPath = parentDirectoryPath[..parentDirectoryPath.LastIndexOf("/")];
					parentDirectoryPath = parentDirectoryPath[..parentDirectoryPath.LastIndexOf("/")];

					<tr>
						<th scope="row"></th>
						<td></td>
						<td colspan="6">
							<i class="bi bi-reply-all"></i>

							<a href="@(Model.PageAddress)" class="text-decoration-none">
								[ROOT]
							</a>
						</td>
					</tr>

					<tr>
						<th scope="row"></th>
						<td></td>
						<td colspan="6">
							<i class="bi bi-reply"></i>

							<a href="@(Model.PageAddress)?path=@(parentDirectoryPath)" class="text-decoration-none">
								[PARENT]
							</a>
						</td>
					</tr>
				}

				@for (var index = 0; index <= Model.Directories.Count - 1; index++)
				{
					var item = Model.Directories[index];
					var path = $"{Model.CurrentPath}{item.Name}";

					<tr>
						<th scope="row">
							@(index + 1)
						</th>
						<td>
							@if (selectItemEnabled)
							{
								<input type="checkbox" id="@(item.Name)" value="@(item.Name)" name="items" class="form-check-input" />
							}
						</td>
						<td>
							<i class="bi bi-folder"></i>

							<a href="@(Model.PageAddress)?path=@(path)" class="text-decoration-none">
								@(item.Name)
							</a>
						</td>
						<td>
							@(GetContentCount(item))
						</td>
						<td>
							@(item.Attributes)
						</td>
						<td>
							@(item.CreationTime.ToString(applicationSettings.FileManagerSettings.DisplayDateTimeFormat))
						</td>
						<td>
							@(item.LastWriteTime.ToString(applicationSettings.FileManagerSettings.DisplayDateTimeFormat))
						</td>
						<td>
							@(item.LastAccessTime.ToString(applicationSettings.FileManagerSettings.DisplayDateTimeFormat))
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

@{
	string GetContentCount(System.IO.DirectoryInfo directoryInfo)
	{
		var fileCount = directoryInfo.GetFiles().Count();
		var directoryCount = directoryInfo.GetDirectories().Count();

		var contentCount = fileCount + directoryCount;

		var result = "[EMPTY]";

		if (contentCount != 0)
		{
			result = contentCount.ToString("#,##0");
		}

		return result;
	}
}
